#########################
# project configuration #
#########################

# C++ project
language: cpp

dist: trusty
sudo: required

git:
  submodules: false

###################
# global settings #
###################

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "vAsvNe+g89Djw1x4xd4V1xUV4xV7jYzxbA74U3sTf5GKaSVALUzLPvMCIgzGceek59c7ba3D8TK54qAFw2yjfcmWQMrPex/dJmYzh9XZqmh01+yAGJmNar/omC7nb3FeA621WGfDhIN23Ts/VdDTjthZbnIgpnIZsucfhPQ8iG7fHfaXnq2id4oCitsaEpjXhe6UWFrx+mLjJvjkhk3c7ASCg12ybSE0uDDMYHODzPe3iMP76uIRdJxXnHFdofS9xrW1YRUoMDzJOz5XlbUJLjA13hSzSX5NJcT5WorKltHBUMfBo7OWKsjCdt9o6xoXWbhEa3+18K1ncyKiiQ0fGSf0vsCUq/FEZUhxGOM9sbY/qywxB2hkk3MYmd4YQn6ZcsQ08NBYdR0z/QY51j1u6maz6tX88a50Ugq7q8Hu3g6pYlygySWh1VTQNdLI0bm7Tjqo9YEWwpkaolGWYR9ctp+xHV+bGqlh7MXNHeeor8PO7waW6ey2VJCYg2fcmU+ucYYwTUi8A/0W3jYuXJ3HztdO43uk9BDC6JIZ4NshRIfgXYLXB0MmJfq/epIda/TP/m2QeGoFGAFYFmaFsQ24ulqXUrzfsmqwgBjE/3v2ZGsjeMQX8iPV/K4o1LDpKCSbM+R2au0cXNn6ZYldHah2HpZubn0QsA8kg+AW6ieqWME="


##################
# Before install #
##################
before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -qq
  
################
# build matrix #
################
matrix:
  include:
    # GCC 4.9
    - compiler: gcc-4.9
      env: COMPILER=g++-4.9
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9    
      before_script: export CXX=g++-4.9

    # GCC 5
    - compiler: gcc-5
      env: COMPILER=g++-5
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      before_script: export CXX=g++-5

    # Clang 3.9 and static analysis
    - os: linux
      compiler: clang-3.9
      addons:
       apt:
         sources:
           - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
           - sourceline: 'deb-src http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
         packages:
           - clang-3.9
      env: 
        - COMPILER=clang++-3.9
        - CONFIG=scan-build
        - ASAN="ON"
        - MSAN="ON"
        - TSAN="ON"
        - UBSAN="ON"
        - STATIC_ANALYZER="ON"
        - CLANG_FORMAT="ON"
        - CLANG_TIDY="ON"
      before_install:
        - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
        - sudo apt-get update -qq
        - sudo apt-get install -qq clang-3.9
      after_success:
        - scan-build-3.9 cmake ..
        - scan-build-3.9 make

    # Coverity scan 
    - os: linux
      compiler: gcc-5
      env:
        - COMPILER=g++-5
        - SPECIAL=coverity
      before_install: 
        - echo -n | openssl s_client -connect scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-certificates.crt
      before_script: export CXX=g++-5
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'libeigen3-dev']
        coverity_scan:
          project:
            name: "cb-geo/lem-gmsh"
            description: "LEM GMSH Coverity scan build submitted via Travis CI"
          notification_email: cued.geomechanics@gmail.com
          build_command_prepend: "sudo ln -sf /usr/bin/g++-5 /usr/bin/g++ && export CXX=g++ && g++ --version && cmake . && make clean"
          build_command: "make"
          branch_pattern: coverity_scan
    
    # Codecov
    - compiler: gcc-5
      env:
        - COMPILER=g++-5
        - SPECIAL=codecoverage
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'ruby']
      before_script:
        - wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz
        - tar xf lcov_1.11.orig.tar.gz
        - sudo make -C lcov-1.11/ install
        - export CXX=g++-5
      after_success:
        - rm -rf ./* && cmake -DENABLE_COVERAGE=On ..
        - make clean && make
        - # ./lem-gmsh
        - make gcov
        - make lcov
        - bash <(curl -s https://codecov.io/bash) -X gcov

    # Valgrind and cppcheck
    - compiler: gcc-5
      env:
        - COMPILER=g++-5
        - SPECIAL=valgrind
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-5', 'cppcheck', 'valgrind']
      before_script: export CXX=g++-5
      after_success:
        # - valgrind --error-exitcode=1 --leak-check=full ./lem-gmsh
        - cd .. && cppcheck --enable=warning --inconclusive --force --std=c++11 src/*.cc include/*.h include/*.tcc --error-exitcode=1

################
# build script #
################

script:
    - mkdir build
    - cd build
    - cmake ..
    - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then make ; fi

notifications:
  slack:
    rooms:
      - cb-geo:0N3fJy823MGsJvcDB91m4p8H#lem
